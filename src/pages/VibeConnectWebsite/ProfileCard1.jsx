import React, { useState, useEffect, useRef } from 'react';
import { motion } from 'framer-motion';
import VibeConnectFooter from './VibeConnectFooter';
import { Link } from 'react-router-dom';

const profiles = [
  {
    id: 1,
    name: '	Project & ',
    title: 'Task Management  ',
    description: '	Project & Task Management',
    text1:" Project & Task Planning: Provides tools for planning projects,managing sub-task  dependencies, and tracking progress using Kanban or list views, with milestones. Offers task assignment, tracking, and management of deadlines with reminders for timely completion.",
    text2:"	Integration with Tools like WhatsApp for assigning and reminder of pending task.",
    text:"Vibe Connect tools is designed to enhance employee productivity, streamline collaboration, and support professional development within organizations. Employee productivity refers to the output generated by an employee within a specific time frame, while efficiency measures how well resources (including time and effort) are utilized to achieve that output. ",
    image: 'https://reshapecxm.com/adobe-reshaping-cxm/media/229a4bffabbf0211df6f53a931d6eb58/ann-handley-full.png',
  },
  {
    id: 2,
    name: '	Communication & ',
    title: 'Collaboration',
    text:" Communication Tools:Includes instant broadcasts, events, Notices, video conferencing (Zoom, Teams), and email integration, Forums etc for seamless communication.	 ",
    text1:"Collaboration Tools: Facilitates document sharing, team collaboration spaces, and internal chats.",
    text2:"Calendar Integration: Supports multiple calendar integration with auto-sync functionality.",
    description: 'Communication & Collaboration',
    image: 'https://reshapecxm.com/adobe-reshaping-cxm/media/92db7a2d4ad8e52d744d3f6e910baf6c/cathy-hackl-full.png',
  },
  {
    id: 3,
    name: 'Service & Support',
    title: ' ',
    text:"	Service Desk: Features a ticketing system, issue tracking, SLA management, and CAPA compliance for handling service requests.",
    text1:"	Booking Requests: Manages travel bookings (cabs, hotels, tickets) and workspace reservations.",
    description: 'Service & Support',
    image: 'https://reshapecxm.com/adobe-reshaping-cxm/media/808338c114b4d26d56592dbf4de716da/shama-hyder-full.png',
  },
  {
    id: 4,
    name: '	Employee Engagement ',
    title: '',
    text:"	Employee Portal: Provides a self-service portal for HR requests, personal information management, and more. ",
    text1:"	Digital Business Card: Enables digital contact sharing and customizable business cards.",
    text2:"	Field Sense: Facilitates field data collection with mobile access for sales, business development, and operations teams.",
    description: '	Employee Engagement',
    image: 'https://reshapecxm.com/adobe-reshaping-cxm/media/92db7a2d4ad8e52d744d3f6e910baf6c/cathy-hackl-full.png',
  },
  {
    id: 5,
    name: 'SKILL GROW ',
    text:"	Skill Development: Offers training programs, certification tracking, and skill assessments to enhance employee capabilities. ",
    text1:"	Recognition & Rewards: Includes reward programs, performance reviews, and recognition badges to boost employee motivation.",
    description: 'SKILL GROW',
    image: 'https://reshapecxm.com/adobe-reshaping-cxm/media/808338c114b4d26d56592dbf4de716da/shama-hyder-full.png',
  },
 
];

const ProfileCard1 = () => {
  const [activeProfile, setActiveProfile] = useState(profiles[0].id);
  const [isVisible, setIsVisible] = useState(false);
  const observerRef = useRef(null);

  const handleProfileClick = (id) => {
    setActiveProfile(id);
  };

  useEffect(() => {
    const observer = new IntersectionObserver(
      ([entry]) => {
        setIsVisible(entry.isIntersecting);
      },
      { threshold: 0.1 } // Adjust threshold as needed
    );

    if (observerRef.current) {
      observer.observe(observerRef.current);
    }

    return () => {
      if (observerRef.current) {
        observer.unobserve(observerRef.current);
      }
    };
  }, []);

  return (
    <div className=' relative bottom-6'>
    <div className="min-h-screen bg-cover bg-center" style={{ backgroundImage: 'url("https://reshapecxm.com/adobe-reshaping-cxm/media/694191382f8b1cafe71bc41bbc278ffa/in-3-1-at-1-38x-full.png")' }}>
      <div className="absolute top-0 right-0 w-full lg:w-1/3 bg-gradient-to-r from-pink-700 to-pink-600 text-white px-4 py-2 md:px-8 md:py-2 rounded-bl-2xl shadow-lg">
        <p className="font-bold text-sm md:text-lg tracking-wide uppercase">Employee Productivity & Efficiency </p>
      </div>


      <div className="flex flex-col lg:flex-row justify-between gap-6 lg:gap-10 py-6 lg:py-10">
        {/* Sidebar with Profile Images */}
        <div className="flex flex-col items-start space-y-6 md:space-y-6 py-4 lg:py-8 lg:ml-20 xl:ml-52">
    {profiles.map((profile, index) => (
      <motion.div
        key={profile.id}
        onClick={() => handleProfileClick(profile.id)}
        className={`flex items-center cursor-pointer transition-all duration-300 w-full ${activeProfile === profile.id ? 'opacity-100' : 'opacity-50'}`}
        initial={{ opacity: 0, x: -50 }}
        animate={{ opacity: activeProfile === profile.id ? 1 : 0.5, x: 0 }}
        transition={{ duration: 0.5 }}
      >
        {/* Alternate Layout: Image first or Name and Title first */}
        {index % 2 === 0 ? (
          <>
            {/* Profile Image First */}
            <div className='flex justify-between items-center w-72'>
            <div className="w-16 h-16 md:w-24 md:h-24">
              <img
                src={profile.image}
                alt={profile.name}
                className="rounded-full w-full h-full border-2  p-2 md:p-2 border-blue-800"
              />
            </div>
            {/* Profile Name and Title */}
            <div className=" ">
              <h2 className="text-gray-900 text-base  font-bold tracking-tight font-fantasy">
                {profile.name}
              </h2>
              <h3 className="text-gray-900 text-base  font-bold tracking-tight font-fantasy">
                {profile.title}
              </h3>
            </div>
            </div>
          </>
        ) : (
          <>
            {/* Profile Name and Title First */}
            <div className='flex justify-between items-center w-72'>
            <div className="">
              <h2 className="text-gray-900 text-base  font-bold tracking-tight font-fantasy ">
                {profile.name}
              </h2>
              <h3 className="text-gray-900 text-base  font-bold tracking-tight font-fantasy ">
                {profile.title}
              </h3>
            </div>
            {/* Profile Image */}
            <div className="w-16 h-16 md:w-24 md:h-24">
              <img
                src={profile.image}
                alt={profile.name}
                className="rounded-full w-full h-full border-2  p-2 md:p-2 border-blue-800"
              />
            </div>
            </div>
          </>
        )}
      </motion.div>
    ))}
  </div>
        {/* Profile Details Section */}
        <div ref={observerRef} className="lg:w-1/3 py-6 md:py-10 px-4 md:px-6 lg:mr-20 xl:mr-32">
          {profiles.map((profile) => (
            profile.id === activeProfile && (
              <motion.div
                key={profile.id}
                initial={{ opacity: 0, x: 50 }}
                animate={{ opacity: isVisible ? 1 : 0, x: isVisible ? 0 : 50 }}
                transition={{ duration: 1 }}
              >
                <h3 className="text-lg md:text-2xl font-bold text-black uppercase">{profile.description}</h3>
                <p className="mt-2 md:mt-4 text-sm md:text-xl text-justify font-serif text-gray-800 leading-relaxed">
                  {profile.text}
                 
                </p>
                <p className="mt-2 md:mt-4 text-sm md:text-xl text-justify font-serif text-gray-800 leading-relaxed">
                  {profile.text1}
                 
                </p>
                <p className="mt-2 md:mt-4 text-sm md:text-xl text-justify font-serif text-gray-800 leading-relaxed">
                  {profile.text2}
                 
                </p>
                <div className="my-4">
                  
                  <div className="w-full   h-0.5 bg-blue-500"></div>
                  <p className="text-center text-blue-500 mt-2 md:mt-4 font-semibold">
                  <a href="/KnowMore-page2">Know More...</a>
                  </p>
                </div>
              </motion.div>
            )
          ))}
          
        </div>
       
      </div>
      </div>
     
    </div>
  );
};

export default ProfileCard1

